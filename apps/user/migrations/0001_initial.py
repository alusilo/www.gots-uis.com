# Generated by Django 4.0.3 on 2022-04-02 14:27

import apps.user.models
import config.storage
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=45, null=True)),
                ('last_name', models.CharField(blank=True, max_length=45, null=True)),
                ('username', models.CharField(max_length=45, unique=True, verbose_name='username')),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, verbose_name='phone number')),
                ('office_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='office number')),
                ('role', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Profesor'), (2, 'Investigador Postdoctoral'), (3, 'Estudiante de Doctorado'), (4, 'Estudiante de Maestr√≠a'), (5, 'Estudiante de Pregrado'), (6, 'Staff de Soporte'), (7, 'Estudiante Invitado')], null=True)),
                ('picture', models.ImageField(blank=True, null=True, storage=config.storage.OverwriteStorage(), upload_to=apps.user.models.post_image_filename)),
                ('school', models.CharField(max_length=45)),
                ('description', models.TextField(max_length=200)),
                ('html_page', models.TextField(blank=True)),
                ('email', models.EmailField(max_length=45, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
        ),
    ]
