# Generated by Django 4.0.3 on 2022-04-02 14:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ResearchArea',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('area', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='research/img')),
                ('content', models.TextField(blank=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('abstract', models.TextField()),
                ('full_description', models.TextField(blank=True)),
                ('journal', models.CharField(max_length=200)),
                ('pub_date', models.DateField()),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='research/publications/pdf')),
                ('image', models.ImageField(upload_to='research/publications/img')),
                ('doi', models.URLField()),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='research.researcharea')),
                ('author', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
